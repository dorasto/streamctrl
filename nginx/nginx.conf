worker_processes auto;

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    keepalive_timeout  65;

    # Define upstream for your frontend (react-router-serve)
    upstream frontend_app {
        # 'frontend' is the service name from docker-compose.yml
        # '5173' is the port exposed by your frontend container
        server frontend:5173;
    }

    # Define upstream for your backend API/WS server
    upstream backend_app {
        # 'backend' is the service name from docker-compose.yml
        # '5468' is the port exposed by your backend container
        server backend:5468;
    }

    server {
        listen 80;
        server_name _; # Listen for any hostname (or specify your domain like your-prod-domain.com)

        # Gzip compression
        gzip on;
        gzip_types text/plain text/css application/json application/javascript text/xml application/xml+rss text/javascript;

        # === PROXY RULE 1: HTTP API Proxy for /api/backend ===
        location /api/backend/ {
            # Rewrite the path for the backend
            # Client requests /api/backend/health -> Backend receives /api/health
            rewrite ^/api/backend/(.*)$ /api/$1 break;

            # Proxy to the backend service's upstream
            proxy_pass http://backend_app; # Use the upstream name
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Cookie passthrough is automatic
        }

        # === PROXY RULE 2: WebSocket Proxy for /ws ===
        location /ws {
            # Proxy to the backend service's upstream for WebSockets
            proxy_pass http://backend_app; # Still http://, Nginx handles upgrade for WS target

            # Crucial WebSocket headers
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            # Other useful headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Timeouts for long-lived WS connections
            proxy_read_timeout 86400s;
            proxy_send_timeout 86400s;
        }

        # === REACT ROUTER APP (Fallback for Client-Side Routing) ===
        # All other requests not matched by the above 'location' blocks
        # are routed to your frontend service (react-router-serve).
        location / {
            proxy_pass http://frontend_app; # Proxy to your frontend service

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}